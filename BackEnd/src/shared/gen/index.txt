import { useExpressServer } from "routing-controllers";
import * as session from "express-session";
import * as bodyParser from "body-parser";
import * as express from "express";
import { Application } from "express";
import * as path from "path";
import * as cors from "cors";
import { AppDataSource } from "../../../shared/db/data-source";
import * as swaggerUi from "swagger-ui-express";
import * as swaggerJsdoc from "swagger-jsdoc";
import swaggerDocument from "../../../shared/Constants/swaggerOptions";
import * as dotenv from "dotenv";

dotenv.config();
const PORT: number = parseInt(process.env.PORT || '8000');

// TODO: Ajouter l'authentification avec JWT
let app: Application = express();

// app.use(logger('dev'));
app.use(cors());
app.use(express.json());
app.use(bodyParser.json());
app.use(express.urlencoded({ extended: true }));
app.use(bodyParser.urlencoded({ extended: false }));
app.use(session({ secret: "secret", saveUninitialized: false, resave: false }));

try {
  const connected = AppDataSource.initialize();
  if (connected) console.log("Database connected");
} catch (error) {
  console.log(error);
}

const controllerPath = path.resolve("src", "controller", "*.ts");

useExpressServer(app, {
  defaultErrorHandler: true,
  routePrefix: "/api",
  controllers: [controllerPath],
});

app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerDocument));

let server = app.listen(PORT, () => {
  return (
    console.log(`Express is listening at http://localhost:${PORT}`),
    console.log(`Swagger is listening at http://localhost:${PORT}/api-docs`)
  );
});

export { app }
export default server